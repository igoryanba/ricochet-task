#!/bin/bash
# run_all_tests.sh - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤

echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ Ricochet AI —Å–∏—Å—Ç–µ–º—ã..."
echo "================================================"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
TEST_DIR="scripts/tests"
LOG_DIR="test_logs"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
LOG_FILE="$LOG_DIR/test_results_$TIMESTAMP.log"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$LOG_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
run_test() {
    local test_name="$1"
    local test_script="$2"
    
    echo ""
    echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: $test_name"
    echo "----------------------------------------"
    
    if [ -f "$test_script" ]; then
        if bash "$test_script" 2>&1 | tee -a "$LOG_FILE"; then
            echo "‚úÖ $test_name: –ü–†–û–ô–î–ï–ù"
            return 0
        else
            echo "‚ùå $test_name: –ü–†–û–í–ê–õ–ï–ù"
            return 1
        fi
    else
        echo "‚ùå $test_name: –°–ö–†–ò–ü–¢ –ù–ï –ù–ê–ô–î–ï–ù ($test_script)"
        return 1
    fi
}

# –°—á–µ—Ç—á–∏–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
echo "–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $(date)"
echo "–õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
echo ""

# –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ricochet
TOTAL_TESTS=$((TOTAL_TESTS + 1))
if run_test "–ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ricochet" "$TEST_DIR/test_basic_ricochet.sh"; then
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi

# –¢–µ—Å—Ç 2: MCP —Å–µ—Ä–≤–µ—Ä
TOTAL_TESTS=$((TOTAL_TESTS + 1))
if run_test "MCP —Å–µ—Ä–≤–µ—Ä" "$TEST_DIR/test_mcp_server.sh"; then
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi

# –¢–µ—Å—Ç 3: AI –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
TOTAL_TESTS=$((TOTAL_TESTS + 1))
if run_test "AI –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è" "$TEST_DIR/test_ai_automation.sh"; then
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi

# –¢–µ—Å—Ç 4: Git –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
TOTAL_TESTS=$((TOTAL_TESTS + 1))
if run_test "Git –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è" "$TEST_DIR/test_git_integration.sh"; then
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi

# –¢–µ—Å—Ç 5: Workflow –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è
TOTAL_TESTS=$((TOTAL_TESTS + 1))
if run_test "Workflow –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è" "$TEST_DIR/test_workflow_coordination.sh"; then
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi

# –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo ""
echo "================================================"
echo "üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "================================================"
echo "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo "–ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED_TESTS"
echo "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAILED_TESTS"
echo "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: $((PASSED_TESTS * 100 / TOTAL_TESTS))%"
echo ""
echo "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $(date)"
echo "–õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
if [ $FAILED_TESTS -eq 0 ]; then
    echo "üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    exit 0
else
    echo "‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´"
    exit 1
fi
