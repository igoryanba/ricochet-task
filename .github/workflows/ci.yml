name: ricochet-ci

on:
  push:
    branches: [ "main" ]
    tags:   [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Build & Test
        working-directory: ricochet-task
        run: |
          go vet ./...
          go test ./...
          go build -v -o ricochet-task ./...

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ricochet-task-${{ github.sha }}
          path: ricochet-task/ricochet-task

  release:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build multiplatform binaries
        run: |
          mkdir -p dist
          for os in linux darwin windows; do \
            GOOS=$os GOARCH=amd64 go build -v -o dist/ricochet-task-$os-amd64${{ "" if os != "windows" else ".exe" }} ./ricochet-task/...; \
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/* 