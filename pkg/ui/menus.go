package ui

import (
	"fmt"
	"strings"
	"time"

	"github.com/AlecAivazis/survey/v2"
)

// MenuOption –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–ø—Ü–∏—é –º–µ–Ω—é
type MenuOption struct {
	Name        string
	Description string
	Action      func() error
}

// ShowMainMenu –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
func ShowMainMenu() error {
	for {
		// –û–ø—Ü–∏–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
		options := []string{
			"‚õìÔ∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∞–º–∏ –º–æ–¥–µ–ª–µ–π",
			"üîñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞–º–∏",
			"üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API-–∫–ª—é—á–∞–º–∏",
			"üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (Task Master)",
			"‚ùå –í—ã—Ö–æ–¥",
		}

		// –ó–∞–≥–æ–ª–æ–≤–æ–∫
		PrintLogo()
		PrintWelcomeMessage()

		// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–µ–Ω—é
		var choice string
		prompt := &survey.Select{
			Message: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
			Options: options,
		}
		if err := survey.AskOne(prompt, &choice); err != nil {
			return err
		}

		switch choice {
		case "‚õìÔ∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∞–º–∏ –º–æ–¥–µ–ª–µ–π":
			if err := ShowChainManagementMenu(); err != nil {
				return err
			}
		case "üîñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞–º–∏":
			if err := ShowCheckpointManagementMenu(); err != nil {
				return err
			}
		case "üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API-–∫–ª—é—á–∞–º–∏":
			if err := ShowKeyManagementMenu(); err != nil {
				return err
			}
		case "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (Task Master)":
			if err := ShowRicochetTaskMenu(); err != nil {
				return err
			}
		case "‚ùå –í—ã—Ö–æ–¥":
			fmt.Println(InfoColor("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."))
			return nil
		}
	}
}

// ShowKeyManagementMenu –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è API-–∫–ª—é—á–∞–º–∏
func ShowKeyManagementMenu() error {
	options := []string{
		"‚ûï –î–æ–±–∞–≤–∏—Ç—å API-–∫–ª—é—á",
		"üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å API-–∫–ª—é—á–∏",
		"üîÑ –û–±–Ω–æ–≤–∏—Ç—å API-–∫–ª—é—á",
		"‚ùå –£–¥–∞–ª–∏—Ç—å API-–∫–ª—é—á",
		"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
	}

	DrawBox("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API-–∫–ª—é—á–∞–º–∏", "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å, –æ–±–Ω–æ–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å API-–∫–ª—é—á–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.", 60)

	var choice string
	prompt := &survey.Select{
		Message: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
		Options: options,
	}

	err := survey.AskOne(prompt, &choice)
	if err != nil {
		return err
	}

	switch choice {
	case "‚ûï –î–æ–±–∞–≤–∏—Ç—å API-–∫–ª—é—á":
		return handleAddKey()
	case "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å API-–∫–ª—é—á–∏":
		return handleListKeys()
	case "üîÑ –û–±–Ω–æ–≤–∏—Ç—å API-–∫–ª—é—á":
		return handleUpdateKey()
	case "‚ùå –£–¥–∞–ª–∏—Ç—å API-–∫–ª—é—á":
		return handleDeleteKey()
	case "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		return ShowMainMenu()
	}

	return nil
}

// ShowChainManagementMenu –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–ø–æ—á–∫–∞–º–∏ –º–æ–¥–µ–ª–µ–π
func ShowChainManagementMenu() error {
	options := []string{
		"‚ûï –°–æ–∑–¥–∞—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π",
		"üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π",
		"üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π",
		"‚ùå –£–¥–∞–ª–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π",
		"‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π",
		"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
	}

	DrawBox("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∞–º–∏ –º–æ–¥–µ–ª–µ–π", "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å, –æ–±–Ω–æ–≤–ª—è—Ç—å, —É–¥–∞–ª—è—Ç—å –∏ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π.", 60)

	var choice string
	prompt := &survey.Select{
		Message: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
		Options: options,
	}

	err := survey.AskOne(prompt, &choice)
	if err != nil {
		return err
	}

	switch choice {
	case "‚ûï –°–æ–∑–¥–∞—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π":
		return handleCreateChain()
	case "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π":
		return handleListChains()
	case "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π":
		return handleUpdateChain()
	case "‚ùå –£–¥–∞–ª–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π":
		return handleDeleteChain()
	case "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –º–æ–¥–µ–ª–µ–π":
		return handleRunChain()
	case "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		return ShowMainMenu()
	}

	return nil
}

// ShowCheckpointManagementMenu –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ–∫–ø–æ–∏–Ω—Ç–∞–º–∏
func ShowCheckpointManagementMenu() error {
	options := []string{
		"‚ûï –°–æ–∑–¥–∞—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç",
		"üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç—ã",
		"üîÑ –û–±–Ω–æ–≤–∏—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç",
		"‚ùå –£–¥–∞–ª–∏—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç",
		"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
	}

	DrawBox("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞–º–∏", "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å, –æ–±–Ω–æ–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏.", 60)

	var choice string
	prompt := &survey.Select{
		Message: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
		Options: options,
	}

	err := survey.AskOne(prompt, &choice)
	if err != nil {
		return err
	}

	switch choice {
	case "‚ûï –°–æ–∑–¥–∞—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç":
		return handleCreateCheckpoint()
	case "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç—ã":
		return handleListCheckpoints()
	case "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç":
		return handleUpdateCheckpoint()
	case "‚ùå –£–¥–∞–ª–∏—Ç—å —á–µ–∫–ø–æ–∏–Ω—Ç":
		return handleDeleteCheckpoint()
	case "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		return ShowMainMenu()
	}

	return nil
}

// HandleInitProject - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
func HandleInitProject() error {
	return handleInitProject()
}

// HandleAddKey - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è API-–∫–ª—é—á–∞
func HandleAddKey() error {
	return handleAddKey()
}

// HandleListKeys - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ API-–∫–ª—é—á–µ–π
func HandleListKeys() error {
	return handleListKeys()
}

// HandleUpdateKey - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API-–∫–ª—é—á–∞
func HandleUpdateKey() error {
	return handleUpdateKey()
}

// HandleDeleteKey - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è API-–∫–ª—é—á–∞
func HandleDeleteKey() error {
	return handleDeleteKey()
}

// HandleCreateChain - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π
func HandleCreateChain() error {
	return handleCreateChain()
}

// HandleListChains - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ü–µ–ø–æ—á–µ–∫ –º–æ–¥–µ–ª–µ–π
func HandleListChains() error {
	return handleListChains()
}

// HandleUpdateChain - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π
func HandleUpdateChain() error {
	return handleUpdateChain()
}

// HandleDeleteChain - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π
func HandleDeleteChain() error {
	return handleDeleteChain()
}

// HandleRunChain - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π
func HandleRunChain() error {
	return handleRunChain()
}

// HandleCreateCheckpoint - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–ø–æ–∏–Ω—Ç–∞
func HandleCreateCheckpoint() error {
	return handleCreateCheckpoint()
}

// HandleListCheckpoints - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á–µ–∫–ø–æ–∏–Ω—Ç–æ–≤
func HandleListCheckpoints() error {
	return handleListCheckpoints()
}

// HandleUpdateCheckpoint - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ–∫–ø–æ–∏–Ω—Ç–∞
func HandleUpdateCheckpoint() error {
	return handleUpdateCheckpoint()
}

// HandleDeleteCheckpoint - –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–ø–æ–∏–Ω—Ç–∞
func HandleDeleteCheckpoint() error {
	return handleDeleteCheckpoint()
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–µ–Ω—é
func handleInitProject() error {
	PrintInfo("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞...")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞
	s := CreateSpinner("–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
	s.Start()
	// –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
	for i := 0; i < 5; i++ {
		time.Sleep(300 * time.Millisecond)
	}
	s.Stop()
	PrintSuccess("–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
	return ShowMainMenu()
}

func handleAddKey() error {
	PrintInfo("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ API-–∫–ª—é—á–∞")

	// –í—ã–±–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
	providers := []string{"OpenAI", "Anthropic", "Google", "Cohere", "–î—Ä—É–≥–æ–π..."}
	provider, err := SelectPrompt("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ API:", providers)
	if err != nil {
		return err
	}

	// –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω "–î—Ä—É–≥–æ–π", –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
	if provider == "–î—Ä—É–≥–æ–π..." {
		provider, err = InputPrompt("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:")
		if err != nil {
			return err
		}
	}

	// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º API-–∫–ª—é—á
	key, err := InputPrompt("–í–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á –¥–ª—è " + provider + ":")
	if err != nil {
		return err
	}

	// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
	description, err := InputPrompt("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):")
	if err != nil {
		return err
	}

	// –ò–º–∏—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
	s := CreateSpinner("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ API-–∫–ª—é—á–∞...")
	s.Start()
	time.Sleep(1 * time.Second)
	s.Stop()

	// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º –∫–ª—é—á–µ
	var maskedKey string
	if len(key) > 4 {
		maskedKey = strings.Repeat("*", len(key)-4) + key[len(key)-4:]
	} else {
		maskedKey = key // –ï—Å–ª–∏ –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π, –Ω–µ –º–∞—Å–∫–∏—Ä—É–µ–º
	}

	keyInfo := fmt.Sprintf("–ü—Ä–æ–≤–∞–π–¥–µ—Ä: %s\n–û–ø–∏—Å–∞–Ω–∏–µ: %s\n–ö–ª—é—á: %s",
		provider,
		description,
		maskedKey)

	DrawBox("–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π API-–∫–ª—é—á", keyInfo, 50)
	PrintSuccess("API-–∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞–º–∏
	return ShowKeyManagementMenu()
}

func handleListKeys() error {
	PrintInfo("–ü—Ä–æ—Å–º–æ—Ç—Ä API-–∫–ª—é—á–µ–π")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–ª—é—á–µ–π
	DrawBox("–î–æ—Å—Ç—É–ø–Ω—ã–µ API-–∫–ª—é—á–∏", "OpenAI: ****************ABCD\nAnthropic: **************1234\nGoogle: *****************WXYZ", 50)
	return ShowKeyManagementMenu()
}

func handleUpdateKey() error {
	PrintInfo("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ API-–∫–ª—é—á–∞")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞
	return ShowKeyManagementMenu()
}

func handleDeleteKey() error {
	PrintInfo("–£–¥–∞–ª–µ–Ω–∏–µ API-–∫–ª—é—á–∞")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞
	return ShowKeyManagementMenu()
}

func handleCreateChain() error {
	PrintInfo("–°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏
	return ShowChainManagementMenu()
}

func handleListChains() error {
	PrintInfo("–ü—Ä–æ—Å–º–æ—Ç—Ä —Ü–µ–ø–æ—á–µ–∫ –º–æ–¥–µ–ª–µ–π")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Ü–µ–ø–æ—á–µ–∫
	return ShowChainManagementMenu()
}

func handleUpdateChain() error {
	PrintInfo("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏
	return ShowChainManagementMenu()
}

func handleDeleteChain() error {
	PrintInfo("–£–¥–∞–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏
	return ShowChainManagementMenu()
}

func handleRunChain() error {
	PrintInfo("–ó–∞–ø—É—Å–∫ —Ü–µ–ø–æ—á–∫–∏ –º–æ–¥–µ–ª–µ–π")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫ —Ü–µ–ø–æ—á–∫–∏
	return ShowChainManagementMenu()
}

func handleCreateCheckpoint() error {
	PrintInfo("–°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞
	return ShowCheckpointManagementMenu()
}

func handleListCheckpoints() error {
	PrintInfo("–ü—Ä–æ—Å–º–æ—Ç—Ä —á–µ–∫–ø–æ–∏–Ω—Ç–æ–≤")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —á–µ–∫–ø–æ–∏–Ω—Ç–æ–≤
	return ShowCheckpointManagementMenu()
}

func handleUpdateCheckpoint() error {
	PrintInfo("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞
	return ShowCheckpointManagementMenu()
}

func handleDeleteCheckpoint() error {
	PrintInfo("–£–¥–∞–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞")
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —á–µ–∫–ø–æ–∏–Ω—Ç–∞
	return ShowCheckpointManagementMenu()
}
